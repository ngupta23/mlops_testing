# This is a basic workflow that is manually triggered

name: testing_mlops

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
# workflow_dispatch = manually controlled
# cron: 11th of every month (ref: https://jasonet.co/posts/scheduled-actions/)
on:
  workflow_dispatch:
  schedule:
    - cron: "* * 11 * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "testing_from_main_branch"
  testing_from_main_branch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Add dependencies including ipython and ipykernel. This is needed for
      # running notebooks with GitHub Actions.
      # Install and register an IPython kernel with Jupyter per
      # https://ipython.readthedocs.io/en/stable/install/index.html
      # NOTE: pip install ipykernel is done through requirements.txt here.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          python -m ipykernel install --user

      # Runs a single command using the runners shell
      - name: Run single script
        run: python analysis/sum.py

      # If running multiple commands in sequence, we need to add | before the run
      - name: Run multiple scripts
        run: |
          python analysis/sum.py
          python analysis/diff.py

      # If running command from a non default directory
      # NOTE: The run command does not need the directory to be mentioned
      # since by specifying the working directory, we esentially cd into it.
      # https://github.community/t/how-to-handle-relative-paths-with-github-actions/158596/2
      - name: Run from non-default directory
        working-directory: ./analysis
        run: python sum.py

      # Note that the listing of kernels is for informational purpose only
      # useful for determining what kernels can be used with the notebook.
      - name: Run single notebook using `nbconvert`
        run: |
          jupyter kernelspec list
          jupyter nbconvert --to notebook --ExecutePreprocessor.kernel_name=python3 --execute analysis/my_notebook.ipynb

      - name: Run single notebook using `papermill`
        run: papermill -k python3 analysis/my_notebook.ipynb analysis/my_notebook_papermill.ipynb

      # commit files per https://github.community/t/possible-to-commit-files-after-workflow-runs/17824/2
      - name: Commit files
        run: |
          git config --local user.email "push@github.com"
          git config --local user.name "GitHub Action"
          git add analysis/my_notebook.nbconvert.ipynb
          git commit -m "Add notebook run by nbconvert through GitHub Actions"
          git add analysis/my_notebook_papermill.ipynb
          git commit -m "Add notebook run by papermill through GitHub Actions"

      # push changes to your repo
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
      # github.ref = The branch or tag ref that triggered the workflow run (CHECK: most likely `main`).
      # For branches this in the format refs/heads/<branch_name>, and
      # for tags it is refs/tags/<tag_name>.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true

      # Access secrets per https://docs.github.com/en/actions/reference/encrypted-secrets
      - name: Check access for secrets
        env: # Set the secret as an environment variable
          EXAMPLE_API_KEY: ${{ secrets.EXAMPLE_API_KEY }}
        run: python analysis/access_secret.py

  # Job runs on a different branch compared to `main`
  # Also commits files to a different branch compared to `main`
  # This is useful when you want to run actions on development version of the code
  testing_from_different_branch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      # This will be run on the `develop` branch
      - uses: actions/checkout@v2
        with:
          ref: develop

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          python -m ipykernel install --user

      - name: Run single script (not on `main`, but on `develop`)
        run: python analysis/multiply.py

      # commit files per https://github.community/t/possible-to-commit-files-after-workflow-runs/17824/2
      - name: Commit files
        run: |
          git config --local user.email "push@github.com"
          git config --local user.name "GitHub Action"
          git add analysis/my_notebook_papermill.ipynb
          git commit -m "Add notebook run by papermill through GitHub Actions"

      # push changes to your repo
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
      # github.ref = The branch or tag ref that triggered the workflow run (CHECK: most likely `main`).
      # For branches this in the format refs/heads/<branch_name>, and
      # for tags it is refs/tags/<tag_name>.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: develop
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
